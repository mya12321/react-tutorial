{"version":3,"sources":["component/square.jsx","component/board.jsx","component/game.jsx","index.js"],"names":["Square","props","react_default","a","createElement","className","squareClass","onClick","value","Board","_this","this","arr","board","map","i","key","j","renderSquare","_this2","highlight","includes","squares","handleClick","React","Component","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","stepNumber","xIsNext","isAscending","status","locationArr","current","winnerList","calculateWinner","moves","step","move","bold","location","stepNum","preStep","length","desc","jumpTo","reverse","board_Board","handleSort","lines","_lines$i","slicedToArray","b","c","slice","push","setState","ReactDOM","render","game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.7ca20c88.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Square(props) {\n  return (\n    <button className={props.squareClass} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n","import React from 'react';\n\nimport Square from './square';\n\nexport default class Board extends React.Component {\n  render() {\n    const arr = [0, 1, 2];\n    const board = arr.map(i => {\n      return (\n        <div key={i} className=\"board-row\">\n          {arr.map(j => this.renderSquare((i * 3) + j))}\n        </div>\n      );\n    });\n    return (\n      <div>\n        {board}\n      </div>);\n  }\n\n  renderSquare(i) {\n    const highlight = this.props.highlight;\n    const squareClass = highlight.includes(i) ? 'square highlight' : 'square';\n    return (\n      <Square\n        key={i}\n        squareClass={squareClass}\n        value={this.props.squares[i]}\n        onClick={() => this.props.handleClick(i)}\n      />);\n  }\n}\n","import React from 'react';\n\nimport Board from './board';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      isAscending: true,\n    };\n  }\n\n  render() {\n    const locationArr = [\n      '(1, 1)',\n      '(2, 1)',\n      '(3, 1)',\n      '(1, 2)',\n      '(2, 2)',\n      '(3, 2)',\n      '(1, 3)',\n      '(2, 3)',\n      '(3, 3)',\n    ];\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winnerList = this.calculateWinner(current.squares);\n    const isAscending = this.state.isAscending;\n\n    const moves = history.map((step, move) => {\n      let bold = '';\n      let location = '';\n      if (move !== 0) {\n        const preStep = history[move - 1].squares;\n        let stepNum;\n        for (const i in step.squares) {\n          if (step.squares[i] !== null && preStep[i] === null) {\n            stepNum = i;\n            break;\n          }\n        }\n        location = locationArr[stepNum];\n      }\n      if (history.length === move + 1) {\n        bold = 'bold';\n      }\n      const desc = move ?\n        'Go to move #' + move + location :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button className={bold} onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    if (!isAscending) {\n      moves.reverse();\n    }\n\n    let status;\n    if (winnerList.length) {\n      status = 'Winner: ' + current.squares[winnerList[0]];\n    } else if (this.state.stepNumber === 9) {\n      status = 'No one wins';\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            highlight={winnerList}\n            squares={current.squares}\n            handleClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <button onClick={() => this.handleSort()}>{isAscending ? 'descending order' : 'ascending order'}</button>\n          <ul>{moves}</ul>\n        </div>\n      </div>\n    );\n  }\n\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return lines[i];\n      }\n    }\n    return [];\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const stepNumber = history.length;\n    if (this.calculateWinner(squares).length || squares[i]) {\n      return;\n    }\n    let xIsNext = this.state.xIsNext;\n    squares[i] = xIsNext ? 'X' : 'O';\n    history.push({squares});\n    xIsNext = !xIsNext;\n    this.setState({history, stepNumber, xIsNext});\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n      history: this.state.history.slice(0, step + 1),\n    });\n  }\n\n  handleSort() {\n    this.setState({isAscending: !this.state.isAscending});\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './component/game';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}